server {
    listen 80;
    server_name api.${DOMAIN} db.${DOMAIN} adminer.${DOMAIN};
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name api.${DOMAIN};

    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

    location / {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    server_name db.${DOMAIN};

    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

    location / {
        return 200 "This subdomain is reserved for PostgreSQL.";
        add_header Content-Type text/plain;
    }
}

server {
    listen 443 ssl;
    server_name adminer.${DOMAIN};

    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

    location / {
        proxy_pass http://adminer:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}





nnn
  location / {
        default_type text/plain;
        return 200 'Database Information:
        Host: db
        # Port: ${POSTGRES_PORT}
        # Database: ${POSTGRES_DB}
        Status: Active\n';
    }