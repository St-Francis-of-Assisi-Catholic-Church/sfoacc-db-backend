version: "3.8"

services:
  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    networks:
      - sfoacc-project-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-check-certificate",
          "-q",
          "--spider",
          "https://localhost:8080",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8000:8000" # API
      - "8080:8080" # Adminer
      - "8081:8081" # Health Check
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - adminer
      - api
    networks:
      - sfoacc-project-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-check-certificate",
          "-q",
          "--spider",
          "https://localhost:8081/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}"
    restart: always
    networks:
      - sfoacc-project-network
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      # - ./.env:/app/.env:ro
    # environment:
    #   - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
    #   - ENVIRONMENT=${ENVIRONMENT}
    #   - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
    #   - SECRET_KEY=${SECRET_KEY?Variable not set}
    #   - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
    #   - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
    #   - SMTP_HOST=${SMTP_HOST}
    #   - SMTP_USER=${SMTP_USER}
    #   - SMTP_PASSWORD=${SMTP_PASSWORD}
    #   - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
    #   - POSTGRES_SERVER=${POSTGRES_SERVER}
    #   - POSTGRES_PORT=${POSTGRES_PORT}
    #   - POSTGRES_DB=${POSTGRES_DB}
    #   - POSTGRES_USER=${POSTGRES_USER?Variable not set}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--insecure",
          "-f",
          "https://localhost:8000/api/v1/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    build:
      context: .
      dockerfile: api.Dockerfile
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

networks:
  sfoacc-project-network:
    driver: bridge
